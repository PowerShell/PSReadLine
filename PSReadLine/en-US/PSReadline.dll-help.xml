<?xml version="1.0" encoding="utf-8"?><helpItems xmlns="http://msh" schema="maml">
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
<!--Generated by PS Help Cmdlet Editor-->
  <command:details>
    <command:name>Get-PSReadlineKeyHandler</command:name>
    <maml:description>
      <maml:para>Gets the key bindings for the PSReadline module.</maml:para>
    </maml:description>
    <maml:copyright>
      <maml:para />
    </maml:copyright>
    <command:verb>Get</command:verb>
    <command:noun>PSReadlineKeyHandler</command:noun>
    <dev:version />
  </command:details>
  <maml:description>
  <!--This is the Description section-->
    <maml:para>Gets the key bindings for the PSReadline module.</maml:para>
    <maml:para>If neither -Bound nor -Unbound is specified, returns all bound keys and unbound functions.</maml:para>
    <maml:para>If -Bound is specified and -Unbound is not specified, only bound keys are returned.</maml:para>
    <maml:para>If -Unound is specified and -Bound is not specified, only unbound keys are returned.</maml:para>
    <maml:para>If both -Bound and -Unound are specified, returns all bound keys and unbound functions.</maml:para>
  </maml:description>
  <command:syntax>
    <command:syntaxItem>
      <maml:name>Get-PSReadlineKeyHandler</maml:name>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Bound</maml:name>
        <maml:description>
          <maml:para>Include functions that are bound.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Unbound</maml:name>
        <maml:description>
          <maml:para>Include functions that are unbound.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
      </command:parameter>
    </command:syntaxItem>
  </command:syntax>
  <command:parameters>
    <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
      <maml:name>Bound</maml:name>
      <maml:description>
        <maml:para>Include functions that are bound.</maml:para>
      </maml:description>
      <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
      <dev:type>
        <maml:name>SwitchParameter</maml:name>
        <maml:uri/>
      </dev:type>
      <dev:defaultValue>True</dev:defaultValue>
    </command:parameter>
    <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
      <maml:name>Unbound</maml:name>
      <maml:description>
        <maml:para>Include functions that are unbound.</maml:para>
      </maml:description>
      <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
      <dev:type>
        <maml:name>SwitchParameter</maml:name>
        <maml:uri/>
      </dev:type>
      <dev:defaultValue>True</dev:defaultValue>
    </command:parameter>
  </command:parameters>
  <command:inputTypes>
    <command:inputType>
      <dev:type>
        <maml:name></maml:name>
        <maml:uri/>
        <maml:description>
          <maml:para>You cannot pipe objects to Get-PSReadlineKeyHandler</maml:para>
        </maml:description>
      </dev:type>
      <maml:description></maml:description>
    </command:inputType>
  </command:inputTypes>
  <command:returnValues>
    <command:returnValue>
      <dev:type>
        <maml:name>PSConsoleUtilities.KeyHandler</maml:name>
        <maml:uri/>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </dev:type>
      <maml:description>
          <maml:para>Returns one entry for each key binding (or chord) for bound functions and/or one entry for each unbound function</maml:para>
      </maml:description>
    </command:returnValue>
  </command:returnValues>
  <command:terminatingErrors></command:terminatingErrors>
  <command:nonTerminatingErrors></command:nonTerminatingErrors>
  <maml:alertSet>
    <maml:title></maml:title>
    <maml:alert>
      <maml:para></maml:para>
    </maml:alert>
  </maml:alertSet>
  <command:examples>
  </command:examples>
  <maml:relatedLinks>
    <maml:navigationLink>
      <maml:linkText>about_PSReadline</maml:linkText>
      <maml:uri />
    </maml:navigationLink>
  </maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
<!--Generated by PS Help Cmdlet Editor-->
  <command:details>
    <command:name>Get-PSReadlineOption</command:name>
    <maml:description>
      <maml:para>Returns the values for the options that can be configured.</maml:para>
    </maml:description>
    <maml:copyright>
      <maml:para />
    </maml:copyright>
    <command:verb>Get</command:verb>
    <command:noun>PSReadlineOption</command:noun>
    <dev:version />
  </command:details>
  <maml:description>
  <!--This is the Description section-->
    <maml:para>Get-PSReadlineOption returns the current state of the settings that can be configured by Set-PSReadlineOption.

The object returned can be used to change PSReadline options.  This provides a slightly simpler way of setting syntax coloring options for multiple kinds of tokens.</maml:para>
  </maml:description>
  <command:syntax>
    <command:syntaxItem>
      <maml:name>Get-PSReadlineOption</maml:name>
    </command:syntaxItem>
  </command:syntax>
  <command:parameters>  </command:parameters>
  <command:inputTypes>
    <command:inputType>
      <dev:type>
        <maml:name></maml:name>
        <maml:uri/>
        <maml:description>
          <maml:para>You cannot pipe objects to Get-PSReadlineOption</maml:para>
        </maml:description>
      </dev:type>
      <maml:description></maml:description>
    </command:inputType>
  </command:inputTypes>
  <command:returnValues>
    <command:returnValue>
      <dev:type>
        <maml:name></maml:name>
        <maml:uri/>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </dev:type>
      <maml:description></maml:description>
  </command:returnValue>
    </command:returnValues>
  <command:terminatingErrors></command:terminatingErrors>
  <command:nonTerminatingErrors></command:nonTerminatingErrors>
  <maml:alertSet>
    <maml:title></maml:title>
    <maml:alert>
      <maml:para></maml:para>
    </maml:alert>
  </maml:alertSet>
  <command:examples>
  </command:examples>
  <maml:relatedLinks>
    <maml:navigationLink>
      <maml:linkText>about_PSReadline</maml:linkText>
      <maml:uri />
    </maml:navigationLink>
  </maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
<!--Generated by PS Help Cmdlet Editor-->
  <command:details>
    <command:name>Set-PSReadlineKeyHandler</command:name>
    <maml:description>
      <maml:para>Binds or rebinds keys to user defined or PSReadline provided key handlers.</maml:para>
    </maml:description>
    <maml:copyright>
      <maml:para />
    </maml:copyright>
    <command:verb>Set</command:verb>
    <command:noun>PSReadlineKeyHandler</command:noun>
    <dev:version />
  </command:details>
  <maml:description>
  <!--This is the Description section-->
    <maml:para>This cmdlet is used to customize what happens when a particular key or sequence of keys is pressed while PSReadline is reading input.

With user defined key bindings, you can do nearly anything that is possible from a PowerShell script.  Typically you might just edit the command line in some novel way, but because the handlers are just PowerShell scripts, you can do interesting things like change directories, launch programs, etc.</maml:para>
  </maml:description>
  <command:syntax>
    <command:syntaxItem>
      <maml:name>Set-PSReadlineKeyHandler</maml:name>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="0">
        <maml:name>Chord</maml:name>
        <maml:description>
          <maml:para>The key or sequence of keys to be bound to a Function or ScriptBlock.  A single binding is specified with a single string.  If the binding is a sequence of keys, the keys are separated with a comma, e.g. &quot;Ctrl+X,Ctrl+X&quot;.  Note that this parameter accepts multiple strings.  Each string is a separate binding, not a sequence of keys for a single binding.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
        <maml:name>ScriptBlock</maml:name>
        <maml:description>
          <maml:para>The ScriptBlock is called when the Chord is entered.  The ScriptBlock is passed one or sometimes two arguments.  The first argument is the key pressed (a ConsoleKeyInfo.)  The second argument could be any object depending on the context.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">ScriptBlock</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>BriefDescription</maml:name>
        <maml:description>
          <maml:para>A brief description of the key binding.  Used in the output of cmdlet Get-PSReadlineKeyHandler.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Description</maml:name>
        <maml:description>
          <maml:para>A more verbose description of the key binding.  Used in the output of the cmdlet Get-PSReadlineKeyHandler.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
      </command:parameter>
    </command:syntaxItem>
    <command:syntaxItem>
      <maml:name>Set-PSReadlineKeyHandler</maml:name>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="0">
        <maml:name>Chord</maml:name>
        <maml:description>
          <maml:para>The key or sequence of keys to be bound to a Function or ScriptBlock.  A single binding is specified with a single string.  If the binding is a sequence of keys, the keys are separated with a comma, e.g. &quot;Ctrl+X,Ctrl+X&quot;.  Note that this parameter accepts multiple strings.  Each string is a separate binding, not a sequence of keys for a single binding.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
        <maml:name>Function</maml:name>
        <maml:description>
          <maml:para>The name of an existing key handler provided by PSReadline.  This parameter allows one to rebind existing key bindings or to bind a handler provided by PSReadline that is currently unbound.

Using the ScriptBlock parameter, one can achieve equivalent functionality by calling the method directly from the ScriptBlock.  This parameter is preferred though - it makes it easier to determine which functions are bound and unbound.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
      </command:parameter>
    </command:syntaxItem>
  </command:syntax>
  <command:parameters>
    <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="0">
      <maml:name>Chord</maml:name>
      <maml:description>
        <maml:para>The key or sequence of keys to be bound to a Function or ScriptBlock.  A single binding is specified with a single string.  If the binding is a sequence of keys, the keys are separated with a comma, e.g. &quot;Ctrl+X,Ctrl+X&quot;.  Note that this parameter accepts multiple strings.  Each string is a separate binding, not a sequence of keys for a single binding.</maml:para>
      </maml:description>
      <command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
      <dev:type>
        <maml:name>String[]</maml:name>
        <maml:uri/>
      </dev:type>
      <dev:defaultValue></dev:defaultValue>
    </command:parameter>
    <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
      <maml:name>ScriptBlock</maml:name>
      <maml:description>
        <maml:para>The ScriptBlock is called when the Chord is entered.  The ScriptBlock is passed one or sometimes two arguments.  The first argument is the key pressed (a ConsoleKeyInfo.)  The second argument could be any object depending on the context.</maml:para>
      </maml:description>
      <command:parameterValue required="true" variableLength="false">ScriptBlock</command:parameterValue>
      <dev:type>
        <maml:name>ScriptBlock</maml:name>
        <maml:uri/>
      </dev:type>
      <dev:defaultValue></dev:defaultValue>
    </command:parameter>
    <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
      <maml:name>BriefDescription</maml:name>
      <maml:description>
        <maml:para>A brief description of the key binding.  Used in the output of cmdlet Get-PSReadlineKeyHandler.</maml:para>
      </maml:description>
      <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
      <dev:type>
        <maml:name>String</maml:name>
        <maml:uri/>
      </dev:type>
      <dev:defaultValue></dev:defaultValue>
    </command:parameter>
    <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
      <maml:name>Description</maml:name>
      <maml:description>
        <maml:para>A more verbose description of the key binding.  Used in the output of the cmdlet Get-PSReadlineKeyHandler.</maml:para>
      </maml:description>
      <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
      <dev:type>
        <maml:name>String</maml:name>
        <maml:uri/>
      </dev:type>
      <dev:defaultValue></dev:defaultValue>
    </command:parameter>
    <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
      <maml:name>Function</maml:name>
      <maml:description>
        <maml:para>The name of an existing key handler provided by PSReadline.  This parameter allows one to rebind existing key bindings or to bind a handler provided by PSReadline that is currently unbound.

Using the ScriptBlock parameter, one can achieve equivalent functionality by calling the method directly from the ScriptBlock.  This parameter is preferred though - it makes it easier to determine which functions are bound and unbound.</maml:para>
      </maml:description>
      <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
      <dev:type>
        <maml:name>String</maml:name>
        <maml:uri/>
      </dev:type>
      <dev:defaultValue></dev:defaultValue>
    </command:parameter>
  </command:parameters>
  <command:inputTypes>
    <command:inputType>
      <dev:type>
        <maml:name></maml:name>
        <maml:uri/>
        <maml:description>
          <maml:para>You cannot pipe objects to Set-PSReadlineKeyHandler</maml:para>
        </maml:description>
      </dev:type>
      <maml:description></maml:description>
    </command:inputType>
  </command:inputTypes>
  <command:returnValues>
    <command:returnValue>
      <dev:type>
        <maml:name></maml:name>
        <maml:uri/>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </dev:type>
      <maml:description></maml:description>
  </command:returnValue>
    </command:returnValues>
  <command:terminatingErrors></command:terminatingErrors>
  <command:nonTerminatingErrors></command:nonTerminatingErrors>
  <maml:alertSet>
    <maml:title></maml:title>
    <maml:alert>
      <maml:para></maml:para>
    </maml:alert>
  </maml:alertSet>
  <command:examples>
    <command:example>
      <maml:title>--------------  Example 1  --------------</maml:title>
      <maml:introduction>
        <maml:para></maml:para>
      </maml:introduction>
      <dev:code>PS C:\&gt; Set-PSReadlineKeyHandler -Key UpArrow -Function HistorySearchBackward</dev:code>
      <dev:remarks>
        <maml:para>This command binds the up arrow key to the function HistorySearchBackward which will use the currently entered command line as the beginning of the search string when searching through history.</maml:para>
      </dev:remarks>
      <command:commandLines>
        <command:commandLine>
          <command:commandText></command:commandText>
        </command:commandLine>
      </command:commandLines>
    </command:example>
    <command:example>
      <maml:title>--------------  Example 2  --------------</maml:title>
      <maml:introduction>
        <maml:para></maml:para>
      </maml:introduction>
      <dev:code>PS C:\&gt; Set-PSReadlineKeyHandler -Chord Shift+Ctrl+B -ScriptBlock {
    [PSConsoleUtilities.PSConsoleReadLine]::RevertLine()
    [PSConsoleUtilities.PSConsoleReadLine]::Insert(&apos;build&apos;)
&gt;&gt;&gt;     [PSConsoleUtilities.PSConsoleReadLine]::AcceptLine()
}</dev:code>
      <dev:remarks>
        <maml:para>This example binds the key Ctrl+Shift+B to a script block that clears the line, inserts build, then accepts the line.  This example shows how a single key can be used to execute a command.</maml:para>
      </dev:remarks>
      <command:commandLines>
        <command:commandLine>
          <command:commandText></command:commandText>
        </command:commandLine>
      </command:commandLines>
    </command:example>
  </command:examples>
  <maml:relatedLinks>
    <maml:navigationLink>
      <maml:linkText>about_PSReadline</maml:linkText>
      <maml:uri />
    </maml:navigationLink>
  </maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
<!--Generated by PS Help Cmdlet Editor-->
  <command:details>
    <command:name>Set-PSReadlineOption</command:name>
    <maml:description>
      <maml:para>Customizes the behavior of command line editing in PSReadline.</maml:para>
    </maml:description>
    <maml:copyright>
      <maml:para />
    </maml:copyright>
    <command:verb>Set</command:verb>
    <command:noun>PSReadlineOption</command:noun>
    <dev:version />
  </command:details>
  <maml:description>
  <!--This is the Description section-->
    <maml:para>The Set-PSReadlineOption cmdlet is used to customize the behavior of the PSReadline module when editing the command line.</maml:para>
  </maml:description>
  <command:syntax>
    <command:syntaxItem>
      <maml:name>Set-PSReadlineOption</maml:name>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>EditMode</maml:name>
        <maml:description>
          <maml:para>Specifies the command line editing mode.  This will reset any key bindings set by Set-PSReadlineKeyHandler.</maml:para>
          <maml:para>Valid values are:</maml:para>
          <maml:para>-- Windows: Key bindings emulate PowerShell/cmd with some bindings emulating Visual Studio.</maml:para>
          <maml:para>-- Emacs: Key bindings emulate Bash or Emacs.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">EditMode</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>ContinuationPrompt</maml:name>
        <maml:description>
          <maml:para>Specifies the string displayed at the beginning of the second and subsequent lines when multi-line input is being entered.  Defaults to &apos;&gt;&gt;&gt; &apos;.  The empty string is valid.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>ContinuationPromptForegroundColor</maml:name>
        <maml:description>
          <maml:para>Specifies the foreground color of the continuation prompt.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">ConsoleColor</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>ContinuationPromptBackgroundColor</maml:name>
        <maml:description>
          <maml:para>Specifies the background color of the continuation prompt.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">ConsoleColor</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>EmphasisForegroundColor</maml:name>
        <maml:description>
          <maml:para>Specifies the foreground color used for emphasis, e.g. to highlight search text.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">ConsoleColor</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>EmphasisBackgroundColor</maml:name>
        <maml:description>
          <maml:para>Specifies the background color used for emphasis, e.g. to highlight search text.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">ConsoleColor</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>HistoryNoDuplicates</maml:name>
        <maml:description>
          <maml:para>Specifies that duplicate commands should not be added to PSReadline history.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>AddToHistoryHandler</maml:name>
        <maml:description>
          <maml:para>Specifies a ScriptBlock that can be used to control which commands get added to PSReadline history.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Func[String, Boolean]</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>HistorySearchCursorMovesToEnd</maml:name>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>MaximumHistoryCount</maml:name>
        <maml:description>
          <maml:para>Specifies the maximum number of commands to save in PSReadline history.  Note that PSReadline history is separate from PowerShell history.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>MaximumKillRingCount</maml:name>
        <maml:description>
          <maml:para>Specifies the maximum number of items stored in the kill ring.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>ResetTokenColors</maml:name>
        <maml:description>
          <maml:para>Restore the token colors to the default settings.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>ShowToolTips</maml:name>
        <maml:description>
          <maml:para>When displaying possible completions, show tooltips in the list of completions.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>ExtraPromptLineCount</maml:name>
        <maml:description>
          <maml:para>Use this option if your prompt spans more than one line and you want the extra lines to appear when PSReadline displays the prompt after showing some output, e.g. when showing a list of completions.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>DingTone</maml:name>
        <maml:description>
          <maml:para>When BellStyle is set to Audible, specifies the tone of the beep.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>DingDuration</maml:name>
        <maml:description>
          <maml:para>When BellStyle is set to Audible, specifies the duration of the beep.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>BellStyle</maml:name>
        <maml:description>
          <maml:para>Specifies how PSReadLine should respond to various error and ambiguous conditions.</maml:para>
          <maml:para>Valid values are:</maml:para>
          <maml:para>-- Audible: a short beep</maml:para>
          <maml:para>-- Visible: a brief flash is performed</maml:para>
          <maml:para>-- None: no feedback</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">BellStyle</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>CompletionQueryItems</maml:name>
        <maml:description>
          <maml:para>Specifies the maximum number of completion items that will be shown without prompting.  If the number of items to show is greater than this value, PSReadline will prompt y/n before displaying the completion items.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>WordDelimiters</maml:name>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>HistorySearchCaseSensitive</maml:name>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">SwitchParameter</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>HistorySaveStyle</maml:name>
        <maml:description>
          <maml:para>Specifies how PSReadLine should save history.</maml:para>
          <maml:para>Valid values are:</maml:para>
          <maml:para>-- Incremental: save history after each command is executed - and share across multiple instances of PowerShell</maml:para>
          <maml:para>-- AtExit: append history file when PowerShell exits</maml:para>
          <maml:para>-- Never: don't use a history file</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">HistorySaveStyle</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>HistorySavePath</maml:name>
        <maml:description>
          <maml:para>Specifies the path to the history file.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
      </command:parameter>
    </command:syntaxItem>
    <command:syntaxItem>
      <maml:name>Set-PSReadlineOption</maml:name>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0">
        <maml:name>TokenKind</maml:name>
        <maml:description>
          <maml:para>Specifies the kind of token when setting token coloring options with the -ForegroundColor and -BackgroundColor parameters.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">TokenClassification</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1">
        <maml:name>ForegroundColor</maml:name>
        <maml:description>
          <maml:para>Specifies the foreground color for the token kind specified by the parameter -TokenKind.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">ConsoleColor</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
        <maml:name>BackgroundColor</maml:name>
        <maml:description>
          <maml:para>Specifies the background color for the token kind specified by the parameter -TokenKind.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">ConsoleColor</command:parameterValue>
      </command:parameter>
    </command:syntaxItem>
  </command:syntax>
  <command:parameters>
    <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
      <maml:name>EditMode</maml:name>
      <maml:description>
        <maml:para>Specifies the command line editing mode.  This will reset any key bindings set by Set-PSReadlineKeyHandler.</maml:para>
        <maml:para>Valid values are:</maml:para>
        <maml:para>-- Windows: Key bindings emulate PowerShell/cmd with some bindings emulating Visual Studio.</maml:para>
        <maml:para>-- Emacs: Key bindings emulate Bash or Emacs.</maml:para>
      </maml:description>
      <command:parameterValue required="true" variableLength="false">EditMode</command:parameterValue>
      <dev:type>
        <maml:name>EditMode</maml:name>
        <maml:uri/>
      </dev:type>
      <dev:defaultValue>Windows</dev:defaultValue>
    </command:parameter>
    <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
      <maml:name>ContinuationPrompt</maml:name>
      <maml:description>
        <maml:para>Specifies the string displayed at the beginning of the second and subsequent lines when multi-line input is being entered.  Defaults to &apos;&gt;&gt;&gt; &apos;.  The empty string is valid.</maml:para>
      </maml:description>
      <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
      <dev:type>
        <maml:name>String</maml:name>
        <maml:uri/>
      </dev:type>
      <dev:defaultValue>&gt;&gt;&gt; </dev:defaultValue>
    </command:parameter>
    <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
      <maml:name>ContinuationPromptForegroundColor</maml:name>
      <maml:description>
        <maml:para>Specifies the foreground color of the continuation prompt.</maml:para>
      </maml:description>
      <command:parameterValue required="true" variableLength="false">ConsoleColor</command:parameterValue>
      <dev:type>
        <maml:name>ConsoleColor</maml:name>
        <maml:uri/>
      </dev:type>
      <dev:defaultValue></dev:defaultValue>
    </command:parameter>
    <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
      <maml:name>ContinuationPromptBackgroundColor</maml:name>
      <maml:description>
        <maml:para>Specifies the background color of the continuation prompt.</maml:para>
      </maml:description>
      <command:parameterValue required="true" variableLength="false">ConsoleColor</command:parameterValue>
      <dev:type>
        <maml:name>ConsoleColor</maml:name>
        <maml:uri/>
      </dev:type>
      <dev:defaultValue></dev:defaultValue>
    </command:parameter>
    <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
      <maml:name>EmphasisForegroundColor</maml:name>
      <maml:description>
        <maml:para>Specifies the foreground color used for emphasis, e.g. to highlight search text.</maml:para>
      </maml:description>
      <command:parameterValue required="true" variableLength="false">ConsoleColor</command:parameterValue>
      <dev:type>
        <maml:name>ConsoleColor</maml:name>
        <maml:uri/>
      </dev:type>
      <dev:defaultValue>Cyan</dev:defaultValue>
    </command:parameter>
    <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
      <maml:name>EmphasisBackgroundColor</maml:name>
      <maml:description>
        <maml:para>Specifies the background color used for emphasis, e.g. to highlight search text.</maml:para>
      </maml:description>
      <command:parameterValue required="true" variableLength="false">ConsoleColor</command:parameterValue>
      <dev:type>
        <maml:name>ConsoleColor</maml:name>
        <maml:uri/>
      </dev:type>
      <dev:defaultValue></dev:defaultValue>
    </command:parameter>
    <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
      <maml:name>HistoryNoDuplicates</maml:name>
      <maml:description>
        <maml:para>Specifies that duplicate commands should not be added to PSReadline history.</maml:para>
      </maml:description>
      <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
      <dev:type>
        <maml:name>SwitchParameter</maml:name>
        <maml:uri/>
      </dev:type>
      <dev:defaultValue>False</dev:defaultValue>
    </command:parameter>
    <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
      <maml:name>AddToHistoryHandler</maml:name>
      <maml:description>
        <maml:para>Specifies a ScriptBlock that can be used to control which commands get added to PSReadline history.</maml:para>
      </maml:description>
      <command:parameterValue required="true" variableLength="false">Func[String, Boolean]</command:parameterValue>
      <dev:type>
        <maml:name>Func[String, Boolean]</maml:name>
        <maml:uri/>
      </dev:type>
      <dev:defaultValue>None</dev:defaultValue>
    </command:parameter>
    <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
      <maml:name>HistorySearchCursorMovesToEnd</maml:name>
      <maml:description>
        <maml:para></maml:para>
      </maml:description>
      <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
      <dev:type>
        <maml:name>SwitchParameter</maml:name>
        <maml:uri/>
      </dev:type>
      <dev:defaultValue>False</dev:defaultValue>
    </command:parameter>
    <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
      <maml:name>MaximumHistoryCount</maml:name>
      <maml:description>
        <maml:para>Specifies the maximum number of commands to save in PSReadline history.  Note that PSReadline history is separate from PowerShell history.</maml:para>
      </maml:description>
      <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
      <dev:type>
        <maml:name>Int32</maml:name>
        <maml:uri/>
      </dev:type>
      <dev:defaultValue>1024</dev:defaultValue>
    </command:parameter>
    <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
      <maml:name>MaximumKillRingCount</maml:name>
      <maml:description>
        <maml:para>Specifies the maximum number of items stored in the kill ring.</maml:para>
      </maml:description>
      <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
      <dev:type>
        <maml:name>Int32</maml:name>
        <maml:uri/>
      </dev:type>
      <dev:defaultValue>10</dev:defaultValue>
    </command:parameter>
    <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
      <maml:name>ResetTokenColors</maml:name>
      <maml:description>
        <maml:para>Restore the token colors to the default settings.</maml:para>
      </maml:description>
      <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
      <dev:type>
        <maml:name>SwitchParameter</maml:name>
        <maml:uri/>
      </dev:type>
      <dev:defaultValue>False</dev:defaultValue>
    </command:parameter>
    <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
      <maml:name>ShowToolTips</maml:name>
      <maml:description>
        <maml:para>When displaying possible completions, show tooltips in the list of completions.</maml:para>
      </maml:description>
      <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
      <dev:type>
        <maml:name>SwitchParameter</maml:name>
        <maml:uri/>
      </dev:type>
      <dev:defaultValue>False</dev:defaultValue>
    </command:parameter>
    <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
      <maml:name>ExtraPromptLineCount</maml:name>
      <maml:description>
        <maml:para>Use this option if your prompt spans more than one line and you want the extra lines to appear when PSReadline displays the prompt after showing some output, e.g. when showing a list of completions.</maml:para>
      </maml:description>
      <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
      <dev:type>
        <maml:name>Int32</maml:name>
        <maml:uri/>
      </dev:type>
      <dev:defaultValue>0</dev:defaultValue>
    </command:parameter>
    <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
      <maml:name>DingTone</maml:name>
      <maml:description>
        <maml:para>When BellStyle is set to Audible, specifies the tone of the beep.</maml:para>
      </maml:description>
      <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
      <dev:type>
        <maml:name>Int32</maml:name>
        <maml:uri/>
      </dev:type>
      <dev:defaultValue>1221</dev:defaultValue>
    </command:parameter>
    <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
      <maml:name>DingDuration</maml:name>
      <maml:description>
        <maml:para>When BellStyle is set to Audible, specifies the duration of the beep.</maml:para>
      </maml:description>
      <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
      <dev:type>
        <maml:name>Int32</maml:name>
        <maml:uri/>
      </dev:type>
      <dev:defaultValue>50ms</dev:defaultValue>
    </command:parameter>
    <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
      <maml:name>BellStyle</maml:name>
      <maml:description>
        <maml:para>Specifies how PSReadLine should respond to various error and ambiguous conditions.</maml:para>
        <maml:para>Valid values are:</maml:para>
        <maml:para>-- Audible: a short beep</maml:para>
        <maml:para>-- Visible: a brief flash is performed</maml:para>
        <maml:para>-- None: no feedback</maml:para>
      </maml:description>
      <command:parameterValue required="true" variableLength="false">BellStyle</command:parameterValue>
      <dev:type>
        <maml:name>BellStyle</maml:name>
        <maml:uri/>
      </dev:type>
      <dev:defaultValue>Audible</dev:defaultValue>
    </command:parameter>
    <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
      <maml:name>CompletionQueryItems</maml:name>
      <maml:description>
        <maml:para>Specifies the maximum number of completion items that will be shown without prompting.  If the number of items to show is greater than this value, PSReadline will prompt y/n before displaying the completion items.</maml:para>
      </maml:description>
      <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
      <dev:type>
        <maml:name>Int32</maml:name>
        <maml:uri/>
      </dev:type>
      <dev:defaultValue>100</dev:defaultValue>
    </command:parameter>
    <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
      <maml:name>WordDelimiters</maml:name>
      <maml:description>
        <maml:para>Specifies the characters that delimit words for functions like ForwardWord or KillWord.</maml:para>
      </maml:description>
      <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
      <dev:type>
        <maml:name>String</maml:name>
        <maml:uri/>
      </dev:type>
      <dev:defaultValue>;:,.[]{}()/\|^&amp;*-=+</dev:defaultValue>
    </command:parameter>
    <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
      <maml:name>HistorySearchCaseSensitive</maml:name>
      <maml:description>
        <maml:para>Specifies the searching history is case sensitive in functions like ReverseSearchHistory or HistorySearchBackward.</maml:para>
      </maml:description>
      <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
      <dev:type>
        <maml:name>SwitchParameter</maml:name>
        <maml:uri/>
      </dev:type>
      <dev:defaultValue>False</dev:defaultValue>
    </command:parameter>
    <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
      <maml:name>HistorySaveStyle</maml:name>
      <maml:description>
        <maml:para>Specifies how PSReadLine should save history.</maml:para>
        <maml:para>Valid values are:</maml:para>
        <maml:para>-- Incremental: save history after each command is executed - and share across multiple instances of PowerShell</maml:para>
        <maml:para>-- AtExit: append history file when PowerShell exits</maml:para>
        <maml:para>-- Never: don't use a history file</maml:para>
      </maml:description>
      <command:parameterValue required="true" variableLength="false">HistorySaveStyle</command:parameterValue>
      <dev:type>
        <maml:name>HistorySaveStyle</maml:name>
        <maml:uri/>
      </dev:type>
      <dev:defaultValue>Incremental</dev:defaultValue>
    </command:parameter>
    <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
      <maml:name>HistorySavePath</maml:name>
      <maml:description>
        <maml:para>Specifies the path to the history file.</maml:para>
      </maml:description>
      <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
      <dev:type>
        <maml:name>String</maml:name>
        <maml:uri/>
      </dev:type>
      <dev:defaultValue>~\AppData\Roaming\PSReadline\$($host.Name)_history.txt</dev:defaultValue>
    </command:parameter>
    <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0">
      <maml:name>TokenKind</maml:name>
      <maml:description>
        <maml:para>Specifies the kind of token when setting token coloring options with the -ForegroundColor and -BackgroundColor parameters.</maml:para>
      </maml:description>
      <command:parameterValue required="true" variableLength="false">TokenClassification</command:parameterValue>
      <dev:type>
        <maml:name>TokenClassification</maml:name>
        <maml:uri/>
      </dev:type>
      <dev:defaultValue>None</dev:defaultValue>
    </command:parameter>
    <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1">
      <maml:name>ForegroundColor</maml:name>
      <maml:description>
        <maml:para>Specifies the foreground color for the token kind specified by the parameter -TokenKind.</maml:para>
      </maml:description>
      <command:parameterValue required="true" variableLength="false">ConsoleColor</command:parameterValue>
      <dev:type>
        <maml:name>ConsoleColor</maml:name>
        <maml:uri/>
      </dev:type>
      <dev:defaultValue>None</dev:defaultValue>
    </command:parameter>
    <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
      <maml:name>BackgroundColor</maml:name>
      <maml:description>
        <maml:para>Specifies the background color for the token kind specified by the parameter -TokenKind.</maml:para>
      </maml:description>
      <command:parameterValue required="true" variableLength="false">ConsoleColor</command:parameterValue>
      <dev:type>
        <maml:name>ConsoleColor</maml:name>
        <maml:uri/>
      </dev:type>
      <dev:defaultValue>None</dev:defaultValue>
    </command:parameter>
  </command:parameters>
  <command:inputTypes>
    <command:inputType>
      <dev:type>
        <maml:name>None</maml:name>
        <maml:uri/>
        <maml:description>
          <maml:para>You cannot pipe objects to Set-PSReadlineOption</maml:para>
        </maml:description>
      </dev:type>
      <maml:description></maml:description>
    </command:inputType>
  </command:inputTypes>
  <command:returnValues>
    <command:returnValue>
      <dev:type>
        <maml:name>None</maml:name>
        <maml:uri/>
        <maml:description>
          <maml:para>This cmdlet does not generate any output.</maml:para>
        </maml:description>
      </dev:type>
      <maml:description></maml:description>
  </command:returnValue>
    </command:returnValues>
  <command:terminatingErrors></command:terminatingErrors>
  <command:nonTerminatingErrors></command:nonTerminatingErrors>
  <command:examples>
  </command:examples>
  <maml:relatedLinks>
    <maml:navigationLink>
      <maml:linkText>about_PSReadline</maml:linkText>
      <maml:uri />
    </maml:navigationLink>
  </maml:relatedLinks>
</command:command>
</helpItems>
